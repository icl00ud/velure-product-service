version: '3.7'

services:
  mongodb:
    image: mongo
    container_name: ${MONGODB_CONTAINER_NAME}
    restart: always
    ports:
      - "${MONGODB_PORT}:${MONGODB_PORT}"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DBNAME}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - traefik_network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    labels:
      - "traefik.http.routers.mongo-express.rule=Host(`mongo-express.localhost`)"
      - "traefik.port=8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: ${MONGODB_PORT}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}
      MONGODB_NORMAL_USER: ${MONGODB_NORMAL_USER}
      MONGODB_NORMAL_PASSWORD: ${MONGODB_NORMAL_PASSWORD}
    networks:
      - traefik_network
    depends_on:
      - mongodb

  velure_product_service:
    build: .
    container_name: velure
    labels:
      - "traefik.http.routers.velure.rule=Host(`velure-product-service.localhost`)"
      - "traefik.port=${NESTJS_PORT}"
    environment:
      NESTJS_PORT: ${NESTJS_PORT}
      MONGODB_HOST: ${MONGODB_CONTAINER_NAME}
      MONGODB_PORT: ${MONGODB_PORT}
      MONGODB_DBNAME: ${MONGODB_DBNAME}
      MONGODB_USER: ${MONGODB_USER}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
    networks:
      - traefik_network
    depends_on:
      - mongodb

  redis:
    image: redis
    container_name: ${REDIS_CONTAINER_NAME}
    restart: always
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - traefik_network

networks:
  traefik_network:

volumes:
  mongodb_data: